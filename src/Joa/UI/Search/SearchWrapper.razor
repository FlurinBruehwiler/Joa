@using Joa.Hotkey
@using Joa.Injectables
@using Microsoft.Extensions.DependencyInjection
@using Photino.Blazor
@inject JoaManager JoaManager 
@inject PhotinoBlazorApp PhotinoBlazorApp 

@if (_showSearch)
{
    <SearchComponent></SearchComponent>
}
else
{
    <p>Search not availablefd</p>
}

@code {
    private bool _showSearch = true;

    protected override void OnInitialized()
    {
        Program.MainWindow = PhotinoBlazorApp.MainWindow;
        
        JoaManager.CurrentScope?.ServiceProvider
            .GetRequiredService<GlobalHotKey>()
            .InitialHotKeyRegistration(() =>
            {

                PhotinoBlazorApp.MainWindow.Invoke(() =>
                {
                    var handle = PhotinoBlazorApp.MainWindow.WindowHandle;
                    External.ShowWindow(handle, 1);
                    External.SetForegroundWindow(handle);
                });
            });

        JoaManager.ShowUi = async showUi =>
        {
            await InvokeAsync(() =>
            {
                _showSearch = showUi;
                StateHasChanged();
            });
        };

        base.OnInitialized();
    }

}